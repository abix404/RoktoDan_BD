# Generated by Django 5.2.5 on 2025-09-12 11:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('roktodanbdweb', '0007_bloodrequest_donorresponse_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DonorPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.PositiveIntegerField(default=0, help_text='Total RD Points earned')),
                ('available_points', models.PositiveIntegerField(default=0, help_text='Available points for withdrawal')),
                ('withdrawn_points', models.PositiveIntegerField(default=0, help_text='Total points withdrawn')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('donor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='roktodanbdweb.donor')),
            ],
            options={
                'verbose_name': 'Donor Points',
                'verbose_name_plural': 'Donor Points',
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('earned', 'Earned'), ('withdrawn', 'Withdrawn'), ('bonus', 'Bonus'), ('penalty', 'Penalty')], max_length=20)),
                ('points', models.IntegerField(help_text='Positive for earned, negative for withdrawn')),
                ('description', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('donor_points', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='roktodanbdweb.donorpoints')),
            ],
            options={
                'verbose_name': 'Point Transaction',
                'verbose_name_plural': 'Point Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WithdrawalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_requested', models.PositiveIntegerField()),
                ('amount_bdt', models.DecimalField(decimal_places=2, help_text='Amount in BDT', max_digits=10)),
                ('ssl_transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('payment_method', models.CharField(default='SSL Commerce', max_length=50)),
                ('account_details', models.JSONField(blank=True, null=True)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_requests', to='roktodanbdweb.donor')),
            ],
            options={
                'verbose_name': 'Withdrawal Request',
                'verbose_name_plural': 'Withdrawal Requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='DonorBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_type', models.CharField(choices=[('first_donor', 'First Time Donor'), ('regular_donor', 'Regular Donor'), ('super_donor', 'Super Donor'), ('top_donor', 'Top Donor'), ('hero_donor', 'Hero Donor'), ('lifesaver', 'Life Saver')], max_length=20)),
                ('earned_date', models.DateTimeField(auto_now_add=True)),
                ('donation_count_when_earned', models.PositiveIntegerField()),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to='roktodanbdweb.donor')),
            ],
            options={
                'verbose_name': 'Donor Badge',
                'verbose_name_plural': 'Donor Badges',
                'ordering': ['-earned_date'],
                'unique_together': {('donor', 'badge_type')},
            },
        ),
    ]
